apply plugin: 'com.android.library'
// plugin: 'com.jfrog.bintray'

def versionName = '1.3.2'

android {
    compileSdkVersion 30
    buildToolsVersion "25.0.3"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
    }

    buildTypes {
    }
}

def siteUrl = 'http://plattysoft.github.io/Leonids/'
def gitUrl = 'https://github.com/plattysoft/Leonids.git'
group = "com.plattysoft.leonids"
version = versionName


Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

//bintray {
//    user = properties.getProperty("bintray.user")
//    key = properties.getProperty("bintray.apikey")
//
//    configurations = ['archives']
//    pkg {
//        repo = "maven"
//        name = "Leonids"
//        websiteUrl = siteUrl
//        vcsUrl = gitUrl
//        licenses = ["Apache-2.0"]
//        dryRun = true
//        publish = false
//        version {
//            name = versionName //Bintray logical version name
////            released = //Optional - Date of the version release. 2 possible values: date in the format of 'yyyy-MM-dd'T'HH:mm:ss.SSSZZ' OR a java.util.Date instance
//            vcsTag = versionName
//        }
//    }
//}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task classesJar(type: Jar) {
    //from android.sourceSets.main.java
    from 'build/intermediates/classes/release/'
    archiveName "LeonidsLib-${versionName}.jar"
}

task generateJavadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    ext.cp = android.libraryVariants.collect { variant ->
        variant.javaCompile.classpath.files
    }
    classpath = files(ext.cp)
}

artifacts {
    archives sourcesJar
    archives classesJar
}